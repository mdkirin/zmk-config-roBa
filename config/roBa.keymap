#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <170>;
};

&lt { quick-tap-ms = <170>; };

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 11>;
        };

        haen {
            bindings = <&kp LANG1>;
            key-positions = <13 18>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 1>;
        };

        semicol {
            bindings = <&as SEMICOLON>;
            key-positions = <18 19>;
            layers = <0>;
        };

        qoute {
            bindings = <&as SINGLE_QUOTE>;
            key-positions = <19 20>;
            layers = <0>;
        };

        copy {
            bindings = <&kp LC(C)>;
            key-positions = <30 31>;
        };

        paste {
            bindings = <&kp LC(V)>;
            key-positions = <31 32>;
        };

        bootloader_rt {
            bindings = <&bootloader>;
            key-positions = <40 41 42>;
        };

        sel_left {
            bindings = <&kp LC(LS(LEFT))>;
            key-positions = <1 2>;
        };

        sel_right {
            bindings = <&kp LC(LS(RIGHT))>;
            key-positions = <2 3>;
        };

        login {
            bindings = <&text3>;
            key-positions = <22 23 24>;
        };

        seoridan {
            bindings = <&text1>;
            key-positions = <1 2 3>;
        };

        name {
            bindings = <&text2>;
            key-positions = <6 7 8>;
        };

        delete {
            bindings = <&kp DEL>;
            key-positions = <12 2>;
        };

        left_paren {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <26 27>;
        };

        right_paren {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <28 29>;
        };

        left_braket {
            bindings = <&as LEFT_BRACKET>;
            key-positions = <7 6>;
        };

        right_braket {
            bindings = <&as RIGHT_BRACKET>;
            key-positions = <7 8>;
        };

        sel_left2 {
            bindings = <&kp LC(LS(LEFT_ARROW))>;
            key-positions = <18 19>;
            layers = <1>;
        };

        sel_right2 {
            bindings = <&kp LC(LS(RIGHT_ARROW))>;
            key-positions = <19 20>;
            layers = <1>;
        };

        Adenoma {
            bindings = <&TubularAdenoma>;
            key-positions = <4 10>;
        };

        HPolyp {
            bindings = <&HyperplasticPolyp>;
            key-positions = <17 9>;
        };

        IIa {
            bindings = <&IIa>;
            key-positions = <10 31>;
        };

        Ipolyp {
            bindings = <&InflammatoryPolyp>;
            key-positions = <9 7>;
        };

        backslash {
            bindings = <&kp BACKSLASH>;
            key-positions = <8 9>;
        };

        del {
            bindings = <&kp DELETE>;
            key-positions = <16 28>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };

        shifted: macro_shifted_kp {
            #binding-cells = <1>;
            label = "MACRO_SHIFTED_KP";
            compatible = "zmk,behavior-macro-one-param";
            bindings =
                <&macro_press>,
                <&kp LSHFT &macro_param_1to1>,
                <&macro_tap>,
                <&kp MACRO_PLACEHOLDER>,
                <&macro_release>,
                <&kp LSHFT>;
        };

        as: autoshift {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            label = "AUTOSHIFT_KP";
            bindings =
                <&macro_press>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &macro_param_1to2 &as_ht MACRO_PLACEHOLDER MACRO_PLACEHOLDER>;
        };

        text1: text1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp J &kp F &kp L &kp E &kp K &kp S &kp N2 &kp N2 &kp EXCL>;
            label = "TEXT1";
        };

        text2: text2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp D &kp L &kp T &kp M &kp D &kp G &kp H &kp K &kp S &kp N8 &kp N0 &kp EXCL>;
            label = "TEXT2";
        };

        text3: text3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp N7 &kp N7 &kp N4 &kp N8>;
            label = "TEXT3";
            wait-ms = <50>;
            tap-ms = <50>;
        };

        TubularAdenoma: TubularAdenoma {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp U &kp B &kp U &kp L &kp A &kp R &kp SPACE &kp A &kp D &kp E &kp N &kp O &kp M &kp A &kp COMMA &kp SPACE &kp L &kp O &kp W &kp SPACE &kp G &kp R &kp A &kp D &kp E &kp SPACE &kp D &kp Y &kp S &kp P &kp L &kp A &kp S &kp I &kp A &kp SPACE &kp W &kp I &kp T &kp H &kp SPACE &kp C &kp L &kp E &kp A &kp R &kp SPACE &kp R &kp E &kp S &kp E &kp C &kp T &kp I &kp O &kp N &kp SPACE &kp M &kp A &kp R &kp G &kp I &kp N>;
            label = "TUBULARADENOMA";
        };

        HyperplasticPolyp: HyperplasticPolyp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(H) &kp Y &kp P &kp E &kp R &kp P &kp L &kp A &kp S &kp T &kp I &kp C &kp SPACE &kp P &kp O &kp L &kp Y &kp P>;
            label = "HYPERPLASTICPOLYP";
        };

        InflammatoryPolyp: InflammatoryPolyp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(I) &kp N &kp F &kp L &kp A &kp M &kp M &kp A &kp T &kp O &kp R &kp Y &kp SPACE &kp P &kp O &kp L &kp Y &kp P>;
            label = "INFLAMMATORYPOLYP";
        };

        IIa: IIa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_7 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_7 &kp KP_NUMBER_3>,
                <&macro_release>,
                <&kp LEFT_ALT>,
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_9 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "IIA";
        };

        behaviors {
            lt_to_layer_0: lt_to_layer_0 {
                compatible = "zmk,behavior-hold-tap";
                label = "LAYER_TAP_TO_0";
                bindings = <&mo>, <&to_layer_0>;

                #binding-cells = <2>;
                tapping-term-ms = <175>;
                flavor = "tap-preferred";
            };

            as_ht: autoshift_hold_tap {
                compatible = "zmk,behavior-hold-tap";
                label = "AUTOSHIFT_HOLD_TAP";
                #binding-cells = <2>;
                tapping-term-ms = <175>;
                flavor = "balanced";
                bindings = <&shifted>, <&kp>;
            };
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q      &kp W         &kp E         &kp R             &kp T                                                                  &kp Y        &kp U             &lt 5 I      &kp O    &kp P
&kp A      &kp S         &kp D         &mt LEFT_SHIFT F  &kp G        &kp LS(LG(S))                    &lt 3 MINUS              &kp H        &mt LEFT_SHIFT J  &lt 4 K      &kp L    &lt 1 ENTER
&kp Z      &kp X         &kp C         &kp V             &kp B        &lt 6 LEFT_PARENTHESIS           &lt 6 RIGHT_PARENTHESIS  &kp N        &kp M             &lt 6 COMMA  &as DOT  &as SLASH
&kp LCTRL  &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 ENTER       &lt 2 SPACE  &mt LEFT_SHIFT LANG_HANGEUL      &lt 2 BACKSPACE          &lt 1 SPACE                                          &tog 7
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        FUNCTION {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &trans                        &trans  &kp HOME        &kp UP_ARROW  &kp END    &trans
&kp F5  &kp F6   &kp F7   &kp F8   &trans   &trans      &trans   &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans
&kp F9  &kp F10  &kp F11  &kp F12  &kp F13  &trans      &trans   &trans  &trans          &trans        &trans     &trans
&trans  &trans   &trans   &trans   &trans   &trans      &kp DEL  &trans                                           &trans
            >;
        };

        NUM {
            bindings = <
&kp LC(Q)  &kp LC(W)  &trans     &trans     &kp PLUS                                                   &kp PLUS      &as N7        &as N8        &as NUMBER_9  &kp BACKSPACE
&kp LC(A)  &kp LC(S)  &kp LC(C)  &kp LC(V)  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &as MINUS     &as NUMBER_4  &as NUMBER_5  &as NUMBER_6  &trans
&kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp PERIOD    &kp EQUAL                    &trans          &kp EQUAL     &as NUMBER_1  &as NUMBER_2  &as NUMBER_3  &trans
&trans     &trans     &trans     &trans     &trans        &trans                       &trans          &as NUMBER_0                                            &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp LS(LEFT) LS(RIGHT)>;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &kp F5  &kp F6  &trans  &trans  &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &kp F7  &kp F8  &trans  &trans  &kp F7
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                          &trans
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                                &trans             &kp LA(LEFT)  &trans  &kp LA(RIGHT)  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans            &trans             &mkp MB1      &trans  &mkp MB2       &kp F13
&trans  &trans  &trans  &trans  &trans  &trans      &trans            &trans             &trans        &trans  &trans         &trans
&trans  &trans  &trans  &trans  &trans  &trans      &kp LC(LS(LEFT))  &kp LC(LS(RIGHT))                                       &trans
            >;
        };

        layer_6 {
            bindings = <
&trans       &trans        &trans        &trans        &trans                      &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&bootloader  &trans        &trans        &trans        &trans  &trans      &trans  &trans        &trans        &trans        &trans        &bootloader
&trans       &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &trans  &trans        &kp LC(C)     &trans        &kp LC(V)     &bt BT_CLR
&trans       &trans        &trans        &trans        &trans  &trans      &to 0   &to 7                                                   &bt BT_CLR_ALL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        MAC {
            bindings = <
&kp Q             &kp W         &kp E             &kp R             &kp T                                                                  &kp Y        &kp U             &lt 5 I      &kp O    &kp P
&kp A             &kp S         &kp D             &mt LEFT_SHIFT F  &kp G        &kp LS(LG(S))                    &lt 3 MINUS              &kp H        &mt LEFT_SHIFT J  &lt 4 K      &kp L    &lt 8 ENTER
&kp Z             &kp X         &kp C             &kp V             &kp B        &lt 6 LEFT_PARENTHESIS           &lt 6 RIGHT_PARENTHESIS  &kp N        &kp M             &lt 6 COMMA  &as DOT  &as SLASH
&kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 8 ENTER       &lt 9 SPACE  &mt LEFT_SHIFT LANG_HANGEUL      &lt 9 BACKSPACE          &lt 8 SPACE                                          &tog 7
            >;

            sensor-bindings = <&inc_dec_kp UP_ARROW DOWN>;
        };

        MAC_FUNCTION {
            bindings = <
&kp F1  &kp F2   &kp F3   &kp F4   &trans                        &trans  &kp HOME        &kp UP_ARROW  &kp END    &trans
&kp F5  &kp F6   &kp F7   &kp F8   &trans   &trans      &trans   &trans  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans
&kp F9  &kp F10  &kp F11  &kp F12  &kp F13  &trans      &trans   &trans  &trans          &trans        &trans     &trans
&trans  &trans   &trans   &trans   &trans   &trans      &kp DEL  &trans                                           &trans
            >;
        };

        MAC_NUM {
            bindings = <
&kp LG(Q)  &kp LG(W)  &trans     &trans     &kp PLUS                                                   &kp PLUS      &as N7        &as N8        &as NUMBER_9  &kp BACKSPACE
&kp LG(A)  &kp LG(S)  &kp LG(C)  &kp LG(V)  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &as MINUS     &as NUMBER_4  &as NUMBER_5  &as NUMBER_6  &trans
&kp LG(Z)  &kp LG(X)  &kp LG(C)  &kp LG(V)  &kp PERIOD    &kp EQUAL                    &trans          &kp EQUAL     &as NUMBER_1  &as NUMBER_2  &as NUMBER_3  &trans
&trans     &trans     &trans     &trans     &trans        &trans                       &trans          &as NUMBER_0                                            &kp PIPE
            >;

            sensor-bindings = <&inc_dec_kp LS(LEFT) LS(RIGHT)>;
        };
    };
};
